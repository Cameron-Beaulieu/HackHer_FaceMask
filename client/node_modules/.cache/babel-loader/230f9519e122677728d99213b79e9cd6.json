{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/evankilburn/Documents/Programs/Python/Mask_Recognition/HackHer_FaceMask/client/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Component } from \"react\";\nimport Webcam from \"react-webcam\";\nexport default class ImageCapture extends Component {\n  constructor(props) {\n    super(props);\n    screenshot.screenshotFormat = \"image/jpg\";\n    this.state = {\n      screenshot: null\n    };\n  }\n\n  myApiCall() {\n    fetch(\"http://localhost:8000/predict\").then(response => response.json()).then(json => console.log(json));\n  }\n\n  saveImg(image) {\n    console.log(image); // Simple POST request with a JSON body using fetch\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"base64str\": image\n      })\n    };\n    fetch('http://localhost:8000/saveImg', requestOptions).then(response => response.json()).then(json => console.log(json));\n  }\n\n  screenshot() {\n    // access the webcam trough this.refs\n    var screenshot = this.refs.webcam.getScreenshot(); //console.log(screenshot)\n\n    this.setState({\n      screenshot: screenshot\n    });\n    this.saveImg(screenshot);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: \"webcam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.screenshot.bind(this),\n        children: \"Capture Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.saveImg,\n        children: \"Mask Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), this.state.screenshot ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.screenshot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 34\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/evankilburn/Documents/Programs/Python/Mask_Recognition/HackHer_FaceMask/client/src/App.js"],"names":["React","Button","Component","Webcam","ImageCapture","constructor","props","screenshot","screenshotFormat","state","myApiCall","fetch","then","response","json","console","log","saveImg","image","requestOptions","method","headers","body","JSON","stringify","refs","webcam","getScreenshot","setState","render","bind"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAClDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACAC,IAAAA,UAAU,CAACC,gBAAX,GAA8B,WAA9B;AACA,SAAKC,KAAL,GAAa;AAAEF,MAAAA,UAAU,EAAE;AAAd,KAAb;AACD;;AAEDG,EAAAA,SAAS,GAAG;AACVC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFlB;AAGD;;AAEDG,EAAAA,OAAO,CAACC,KAAD,EAAO;AACZH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EADY,CAEX;;AACA,UAAMC,cAAc,GAAG;AACtBC,MAAAA,MAAM,EAAE,MADc;AAEtBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFa;AAGtBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAE,qBAAaN;AAAf,OAAf;AAHgB,KAAvB;AAKHP,IAAAA,KAAK,CAAC,+BAAD,EAAkCQ,cAAlC,CAAL,CACKP,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEWE,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFpB;AAGC;;AAEDP,EAAAA,UAAU,GAAG;AACX;AACA,QAAIA,UAAU,GAAG,KAAKkB,IAAL,CAAUC,MAAV,CAAiBC,aAAjB,EAAjB,CAFW,CAGX;;AACA,SAAKC,QAAL,CAAc;AAAErB,MAAAA,UAAU,EAAEA;AAAd,KAAd;AACA,SAAKU,OAAL,CAAaV,UAAb;AACD;;AAEDsB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,KAAf;AAAsB,QAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKtB,UAAL,CAAgBuB,IAAhB,CAAqB,IAArB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKb,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIG,KAAKR,KAAL,CAAWF,UAAX,gBAAwB;AAAK,QAAA,GAAG,EAAE,KAAKE,KAAL,CAAWF;AAArB;AAAA;AAAA;AAAA;AAAA,cAAxB,GAA8D,IAJjE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA3CiD","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Component } from \"react\";\nimport Webcam from \"react-webcam\";\n\nexport default class ImageCapture extends Component {\n  constructor(props) {\n    super(props);\n    screenshot.screenshotFormat = \"image/jpg\"\n    this.state = { screenshot: null };\n  }\n\n  myApiCall() {\n    fetch(\"http://localhost:8000/predict\")\n      .then((response) => response.json())\n      .then((json) => console.log(json));\n  }\n\n  saveImg(image){\n    console.log(image)\n     // Simple POST request with a JSON body using fetch\n     const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ \"base64str\": image})\n     };\n  fetch('http://localhost:8000/saveImg', requestOptions)\n      .then(response => response.json())\n      .then((json) => console.log(json));\n  }\n\n  screenshot() {\n    // access the webcam trough this.refs\n    var screenshot = this.refs.webcam.getScreenshot();\n    //console.log(screenshot)\n    this.setState({ screenshot: screenshot })\n    this.saveImg(screenshot)\n  }\n\n  render() {\n    return (\n      <div>\n        <Webcam audio={false} ref=\"webcam\" />\n        <button onClick={this.screenshot.bind(this)}>Capture Image</button>\n        <button onClick={this.saveImg}>Mask Detection</button>\n        {this.state.screenshot ? <img src={this.state.screenshot} /> : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}