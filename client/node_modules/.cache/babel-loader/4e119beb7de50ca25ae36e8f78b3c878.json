{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/evankilburn/Documents/Programs/Python/Mask_Recognition/HackHer_FaceMask/client/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Component } from \"react\";\nimport Webcam from \"react-webcam\";\nexport default class ImageCapture extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      screenshot: null\n    };\n  }\n\n  myApiCall() {\n    fetch(\"http://localhost:8000/predict\").then(response => response.json()).then(json => console.log(json));\n  }\n\n  writeImg() {\n    // Example POST method implementation:\n    async function postData(url = \"\", data = {}) {\n      // Default options are marked with *\n      const response = await fetch(url, {\n        method: \"POST\",\n        // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\",\n        // no-cors, *cors, same-origin\n        cache: \"no-cache\",\n        // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\",\n        // include, *same-origin, omit\n        headers: {\n          \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        redirect: \"follow\",\n        // manual, *follow, error\n        referrerPolicy: \"no-referrer\",\n        // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n      });\n      return response.json(); // parses JSON response into native JavaScript objects\n    }\n\n    postData(\"https://example.com/answer\", {\n      answer: 42\n    }).then(data => {\n      console.log(data); // JSON data parsed by `data.json()` call\n    });\n  }\n\n  screenshot() {\n    // access the webcam trough this.refs\n    var screenshot = this.refs.webcam.getScreenshot();\n    console.log(screenshot);\n    this.setState({\n      screenshot: screenshot\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: \"webcam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.screenshot.bind(this),\n        children: \"Capture Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.myApiCall,\n        children: \"Mask Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), this.state.screenshot ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.screenshot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 34\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/evankilburn/Documents/Programs/Python/Mask_Recognition/HackHer_FaceMask/client/src/App.js"],"names":["React","Button","Component","Webcam","ImageCapture","constructor","props","state","screenshot","myApiCall","fetch","then","response","json","console","log","writeImg","postData","url","data","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","answer","refs","webcam","getScreenshot","setState","render","bind"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAClDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AACD;;AAEDC,EAAAA,SAAS,GAAG;AACVC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFlB;AAGD;;AAEDG,EAAAA,QAAQ,GAAG;AACT;AACA,mBAAeC,QAAf,CAAwBC,GAAG,GAAG,EAA9B,EAAkCC,IAAI,GAAG,EAAzC,EAA6C;AAC3C;AACA,YAAMP,QAAQ,GAAG,MAAMF,KAAK,CAACQ,GAAD,EAAM;AAChCE,QAAAA,MAAM,EAAE,MADwB;AAChB;AAChBC,QAAAA,IAAI,EAAE,MAF0B;AAElB;AACdC,QAAAA,KAAK,EAAE,UAHyB;AAGb;AACnBC,QAAAA,WAAW,EAAE,aAJmB;AAIJ;AAC5BC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT,CAEP;;AAFO,SALuB;AAShCC,QAAAA,QAAQ,EAAE,QATsB;AASZ;AACpBC,QAAAA,cAAc,EAAE,aAVgB;AAUD;AAC/BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAX0B,CAWJ;;AAXI,OAAN,CAA5B;AAaA,aAAOP,QAAQ,CAACC,IAAT,EAAP,CAf2C,CAenB;AACzB;;AAEDI,IAAAA,QAAQ,CAAC,4BAAD,EAA+B;AAAEa,MAAAA,MAAM,EAAE;AAAV,KAA/B,CAAR,CAAuDnB,IAAvD,CAA6DQ,IAAD,IAAU;AACpEL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ,EADoE,CACjD;AACpB,KAFD;AAGD;;AAEDX,EAAAA,UAAU,GAAG;AACX;AACA,QAAIA,UAAU,GAAG,KAAKuB,IAAL,CAAUC,MAAV,CAAiBC,aAAjB,EAAjB;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,SAAK0B,QAAL,CAAc;AAAE1B,MAAAA,UAAU,EAAEA;AAAd,KAAd;AACD;;AAED2B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,KAAf;AAAsB,QAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAK3B,UAAL,CAAgB4B,IAAhB,CAAqB,IAArB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAK3B,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIG,KAAKF,KAAL,CAAWC,UAAX,gBAAwB;AAAK,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC;AAArB;AAAA;AAAA;AAAA;AAAA,cAAxB,GAA8D,IAJjE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AArDiD","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport { Component } from \"react\";\nimport Webcam from \"react-webcam\";\n\nexport default class ImageCapture extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { screenshot: null };\n  }\n\n  myApiCall() {\n    fetch(\"http://localhost:8000/predict\")\n      .then((response) => response.json())\n      .then((json) => console.log(json));\n  }\n\n  writeImg() {\n    // Example POST method implementation:\n    async function postData(url = \"\", data = {}) {\n      // Default options are marked with *\n      const response = await fetch(url, {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, *cors, same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n          \"Content-Type\": \"application/json\",\n          // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n      });\n      return response.json(); // parses JSON response into native JavaScript objects\n    }\n\n    postData(\"https://example.com/answer\", { answer: 42 }).then((data) => {\n      console.log(data); // JSON data parsed by `data.json()` call\n    });\n  }\n\n  screenshot() {\n    // access the webcam trough this.refs\n    var screenshot = this.refs.webcam.getScreenshot();\n    console.log(screenshot)\n    this.setState({ screenshot: screenshot });\n  }\n\n  render() {\n    return (\n      <div>\n        <Webcam audio={false} ref=\"webcam\" />\n        <button onClick={this.screenshot.bind(this)}>Capture Image</button>\n        <button onClick={this.myApiCall}>Mask Detection</button>\n        {this.state.screenshot ? <img src={this.state.screenshot} /> : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}